# partly from https://docs.github.com/en/actions/publishing-packages/publishing-docker-images#publishing-images-to-github-packages
name: Create and publish a Docker image

permissions:
  id-token: write # This is required for OIDC
  contents: read  # This is required for actions/checkout

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: 'The environment to deploy to'
        required: true
        default: 'test'
  push:
    branches: ['master']

env:
  IMAGE_NAME: imagepullsecret-patcher/imagepullsecret-patcher  # Must begin with `${repoName}/`

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Extract branch name
        shell: bash
        run: |
          echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=short_sha::$(echo ${GITHUB_SHA} | cut -c1-8)"
        id: extract_branch

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: (UST1) Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        id: configure-aws-credentials
        with:
          role-to-assume: ${{ vars.AWS_ROLE }}
          role-session-name: publish-imagepullsecret-patcher
          aws-region: us-east-1

      - name: AWS ECR Login
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registries: '${{ steps.configure-aws-credentials.outputs.aws-account-id }}'

      - name: Create ECR repository
        run: |
          aws ecr create-repository --repository-name "${IMAGE_NAME}" --image-tag-mutability IMMUTABLE || true
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push multi-arch image
        run: |
          image="${REGISTRY}/${IMAGE_NAME}:${VERSION}"
          docker buildx create --use
          docker buildx build --platform linux/amd64,linux/arm64 . -t "$image" --push
        env:
          REGISTRY: ${{ vars.REGISTRY }}
          VERSION: ${{ steps.extract_branch.outputs.branch }}-sha-${{ steps.extract_branch.outputs.short_sha }}-run-${{ github.run_number }}
